/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */
/* Document
       ========================================================================== */
/**
     * 1. Correct the line height in all browsers.
     * 2. Prevent adjustments of font size after orientation changes in
     *    IE on Windows Phone and in iOS.
     */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
       ========================================================================== */
/**
     * Remove the margin in all browsers (opinionated).
     */
body {
  margin: 0; }

/**
     * Add the correct display in IE 9-.
     */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
     * Correct the font size and margin on `h1` elements within `section` and
     * `article` contexts in Chrome, Firefox, and Safari.
     */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
figcaption,
figure {
  display: block; }

/**
     * Add the correct margin in IE 8.
     */
figure {
  margin: 1em 40px; }

/**
     * 1. Add the correct box sizing in Firefox.
     * 2. Show the overflow in Edge and IE.
     */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
     * Add the correct display in IE.
     */
main {
  display: block; }

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Links
       ========================================================================== */
/**
     * 1. Remove the gray background on active links in IE 10.
     * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
     */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/* Text-level semantics
       ========================================================================== */
/**
     * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
     * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
     */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
     * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
     */
b,
strong {
  font-weight: inherit; }

/**
     * Add the correct font weight in Chrome, Edge, and Safari.
     */
b,
strong {
  font-weight: bolder; }

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
     * Add the correct font style in Android 4.3-.
     */
dfn {
  font-style: italic; }

/**
     * Add the correct background and color in IE 9-.
     */
mark {
  background-color: #ff0;
  color: #000; }

/**
     * Add the correct font size in all browsers.
     */
small {
  font-size: 80%; }

/**
     * Prevent `sub` and `sup` elements from affecting the line height in
     * all browsers.
     */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
audio,
video {
  display: inline-block; }

/**
     * Add the correct display in iOS 4-7.
     */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
     * Remove the border on images inside links in IE 10-.
     */
img {
  border-style: none; }

/**
     * Hide the overflow in IE.
     */
svg:not(:root) {
  overflow: hidden; }

/* Forms
       ========================================================================== */
/**
     * 1. Change the font styles in all browsers (opinionated).
     * 2. Remove the margin in Firefox and Safari.
     */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
     * Show the overflow in IE.
     */
button {
  overflow: visible; }

/**
     * Remove the inheritance of text transform in Edge, Firefox, and IE.
     * 1. Remove the inheritance of text transform in Firefox.
     */
button,
select {
  /* 1 */
  text-transform: none; }

/**
     * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
     *    controls in Android 4.
     * 2. Correct the inability to style clickable types in iOS and Safari.
     */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

button,
[type="button"],
[type="reset"],
[type="submit"] {
  /**
       * Remove the inner border and padding in Firefox.
       */
  /**
       * Restore the focus styles unset by the previous rule.
       */ }
  button::-moz-focus-inner,
  [type="button"]::-moz-focus-inner,
  [type="reset"]::-moz-focus-inner,
  [type="submit"]::-moz-focus-inner {
    border-style: none;
    padding: 0; }
  button:-moz-focusring,
  [type="button"]:-moz-focusring,
  [type="reset"]:-moz-focusring,
  [type="submit"]:-moz-focusring {
    outline: 1px dotted ButtonText; }

/**
     * Show the overflow in Edge.
     */
input {
  overflow: visible; }

/**
     * 1. Add the correct box sizing in IE 10-.
     * 2. Remove the padding in IE 10-.
     */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
     * Correct the cursor style of increment and decrement buttons in Chrome.
     */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
     * 1. Correct the odd appearance in Chrome and Safari.
     * 2. Correct the outline style in Safari.
     */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
  /**
       * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
       */ }
  [type="search"]::-webkit-search-cancel-button, [type="search"]::-webkit-search-decoration {
    -webkit-appearance: none; }

/**
     * 1. Correct the inability to style clickable types in iOS and Safari.
     * 2. Change font properties to `inherit` in Safari.
     */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/**
     * Correct the padding in Firefox.
     */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
     * 1. Correct the text wrapping in Edge and IE.
     * 2. Correct the color inheritance from `fieldset` elements in IE.
     * 3. Remove the padding so developers are not caught out when they zero out
     *    `fieldset` elements in all browsers.
     */
legend {
  box-sizing: border-box;
  /* 1 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  color: inherit;
  /* 2 */
  white-space: normal;
  /* 1 */ }

/**
     * 1. Add the correct display in IE 9-.
     * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
     */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
     * Remove the default vertical scrollbar in IE.
     */
textarea {
  overflow: auto; }

/* Interactive
       ========================================================================== */
/*
     * Add the correct display in Edge, IE, and Firefox.
     */
details {
  display: block; }

/*
     * Add the correct display in all browsers.
     */
summary {
  display: list-item; }

/*
     * Add the correct display in IE 9-.
     */
menu {
  display: block; }

/* Scripting
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
canvas {
  display: inline-block; }

/**
     * Add the correct display in IE.
     */
template {
  display: none; }

/* Hidden
       ========================================================================== */
/**
     * Add the correct display in IE 10-.
     */
[hidden] {
  display: none; }

@font-face {
  font-family: Pattaya;
  src: url(../fonts/Pattaya-Regular.woff) format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: PFDin;
  src: url(../fonts/pfdintextcomppro-regular.woff) format("woff");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: PFDin;
  src: url(../fonts/pfdintextpro-bold-webfont.woff) format("woff");
  font-weight: bold;
  font-style: normal; }

@font-face {
  font-family: RobotoReg;
  src: url(../fonts/RobotoCondensed-Regular.woff) format("woff");
  font-weight: normal;
  font-style: normal; }

/*.h1{
    font-family: 'Poppins', sans-serif;
    font-weight: 300;
    font-style: light;
}*/
* {
  margin: 0;
  padding: 0;
  font-weight: normal;
  font-style: normal; }

*|*:-webkit-any-link {
  text-decoration: none; }

*|*:any-link {
  text-decoration: none; }

html {
  font-family: PFDin;
  font-size: 16px; }

.container {
  max-width: 1366px;
  margin: 0 auto;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  position: relative; }

menu {
  width: 13%;
  background-color: #2f3032; }
  @media screen and (max-width: 767px) {
    menu {
      width: 100%; } }

.logo {
  height: 114px;
  width: 100%; }
  .logo a {
    display: block;
    width: 100%;
    height: 100%;
    box-sizing: border-box;
    background: url(../img/FoodYork.png) center no-repeat; }

nav {
  width: 100%; }
  @media screen and (max-width: 767px) {
    nav {
      width: 40%;
      margin: 0 auto; } }
  nav ul {
    list-style: none; }
    @media screen and (max-width: 767px) {
      nav ul {
        display: none; } }
    nav ul li a {
      color: #efefef;
      text-align: center;
      text-decoration: none;
      display: block;
      padding-top: 10px;
      padding-bottom: 10px;
      text-transform: uppercase; }
      @media screen and (max-width: 767px) {
        nav ul li a {
          border-radius: 15px;
          font-size: 24px; } }
      nav ul li a:hover {
        background-color: #252628; }
        @media screen and (max-width: 767px) {
          nav ul li a:hover {
            background-color: #3d3f42;
            background: linear-gradient(to right, #313235, #3d3f42 15%, #3d3f42 85%, #313235); } }
  @media screen and (max-width: 767px) {
    nav ul.show {
      display: block; } }
  nav .mobileMenu a {
    color: #737373;
    text-align: center;
    text-decoration: none;
    font-size: 32px;
    display: none; }
    nav .mobileMenu a:hover {
      color: #efefef; }
    @media screen and (max-width: 767px) {
      nav .mobileMenu a {
        display: block; } }

.lang {
  margin: 220px auto 0 auto;
  width: 30px; }
  @media screen and (max-width: 767px) {
    .lang {
      margin: 20px auto 0 auto;
      width: 60px; } }
  .lang a {
    display: inline-block;
    text-transform: uppercase;
    width: 50%;
    font-size: 14px;
    box-sizing: border-box;
    color: #737373;
    text-decoration: none; }
    @media screen and (max-width: 767px) {
      .lang a {
        font-size: 19.2px;
        text-align: center; } }
    .lang a:hover {
      color: #efefef; }

.socialIcon {
  margin: 10px auto 0 auto;
  width: 60%; }
  @media screen and (max-width: 991px) {
    .socialIcon {
      width: 70%; } }
  @media screen and (max-width: 767px) {
    .socialIcon {
      margin: 20px auto 10px auto;
      width: 80%; } }
  .socialIcon a {
    display: inline-block;
    width: 22%;
    font-size: 14px;
    color: #737373;
    text-decoration: none;
    padding: 5px;
    box-sizing: border-box; }
    @media screen and (max-width: 991px) {
      .socialIcon a {
        width: 47%;
        text-align: center; } }
    @media screen and (max-width: 767px) {
      .socialIcon a {
        width: 24%;
        font-size: 19.2px;
        text-align: center; } }
    .socialIcon a:hover {
      color: #efefef; }

.content {
  background-color: #fcfcfc;
  width: 87%; }
  @media screen and (max-width: 767px) {
    .content {
      width: 100%; } }

.wrapper {
  width: 92%;
  margin: 0 auto; }

.header {
  width: 100%;
  min-height: 89px;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-align: center;
      align-items: center;
  position: relative;
  -ms-flex-pack: justify;
      justify-content: space-between;
  background: url(../img/border-bottom.png) center bottom no-repeat; }
  .header .search {
    cursor: pointer;
    color: #737373; }
    .header .search:hover {
      color: #252628; }
  .header .header-right {
    min-height: 65px;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    -ms-flex-align: center;
        align-items: center;
    -ms-flex-pack: justify;
        justify-content: space-between; }
    .header .header-right .message {
      margin: 0 15px;
      padding: 0 5px;
      position: relative;
      cursor: pointer;
      color: #737373; }
      .header .header-right .message:hover {
        color: #252628; }
      .header .header-right .message img {
        position: absolute;
        top: 0;
        right: 0; }
    .header .header-right .user {
      margin: 0 15px;
      padding: 0 5px;
      cursor: pointer;
      color: #737373; }
      .header .header-right .user:hover {
        color: #252628; }

h2 {
  font-size: 30px;
  color: #5b5b5b;
  margin-top: 15px;
  text-align: center; }

.row {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  margin: 0 -5.5px; }
  .row .col-1, .row .col-2 {
    margin: 5.5px 0 0 5.5px; }
  .row .col-1 {
    width: calc(25% - 11px);
    position: relative; }
    @media screen and (max-width: 767px) {
      .row .col-1 {
        width: calc(50% - 11px); } }
  .row .col-2 {
    width: calc(50% - 11px);
    position: relative; }
    @media screen and (max-width: 767px) {
      .row .col-2 {
        width: 100%;
        margin: 15px auto; } }

.news__item {
  text-decoration: none;
  display: block;
  position: relative; }

.news__image {
  width: 100%; }
  .news__image img {
    max-width: 100%;
    height: auto;
    display: block;
    margin: 0 auto; }

.news__text {
  position: absolute;
  top: 30%;
  left: 0;
  background: url(../img/spoon&forg.png) center bottom no-repeat;
  color: #ffffff;
  text-align: center;
  width: 100%; }
  .news__text .category {
    text-transform: uppercase;
    text-shadow: 0 0 1px black; }
  .news__text .category_name {
    font-size: 36px;
    text-transform: uppercase;
    padding: 5px 0 25px 0;
    text-shadow: 1px 1px 3px black; }
    .news__text .category_name:hover {
      text-shadow: 2px 2px 4px black, -2px -2px 4px black; }

.title {
  position: absolute;
  top: 0;
  left: 0;
  display: inline-block;
  margin: 5% 13%; }
  .title .black_border {
    max-width: 156px;
    height: 6px;
    background-color: #2f3032; }
  .title .title_item {
    color: #333333;
    text-transform: uppercase;
    font-size: 19px;
    background-color: #ffffff;
    padding: 6px 12px;
    display: inline-block; }
    .title .title_item:hover {
      background-color: #333333;
      color: #ffffff;
      cursor: pointer; }

.news {
  background: url(../img/border-bottom.png) center bottom no-repeat;
  padding-bottom: 60px; }

@media screen and (min-width: 768px) {
  div.resipes_nav {
    width: 60%;
    border-radius: 18px;
    background-color: #f1f1f1;
    margin: 15px auto;
    display: block;
    text-align: center; }
    div.resipes_nav:hover {
      background-color: transparent; }
    div.resipes_nav .btn {
      border-radius: 18px;
      width: calc(100%/3 - 5px);
      display: inline-block;
      height: 35px;
      padding: 10px 26px;
      box-sizing: border-box;
      text-decoration: none;
      text-align: center;
      background-color: #f1f1f1;
      color: #5b5b5b;
      transition-duration: 0.4s; }
      div.resipes_nav .btn:hover {
        background-color: #2f3032;
        color: #f1f1f1;
        cursor: pointer; } }

@media screen and (max-width: 767px) {
  div.resipes_nav {
    width: 40%;
    margin: 0 auto; }
    div.resipes_nav .btn {
      border-radius: 18px;
      margin: 5px auto;
      width: 100%;
      display: inline-block;
      height: 35px;
      padding: 10px 26px;
      box-sizing: border-box;
      text-decoration: none;
      text-align: center;
      background-color: #f1f1f1;
      color: #5b5b5b;
      transition-duration: 0.4s;
      overflow: hidden; }
      div.resipes_nav .btn:hover {
        background-color: #2f3032;
        color: #f1f1f1;
        cursor: pointer; } }

.resipesItem {
  border: 2px solid #f2f2f2;
  box-sizing: border-box; }
  @media screen and (max-width: 767px) {
    .resipesItem {
      width: 100%; } }
  .resipesItem__image {
    width: 50%;
    position: relative;
    text-decoration: none;
    cursor: auto;
    -ms-flex: 1 1 255px;
        flex: 1 1 255px; }
    @media screen and (max-width: 767px) {
      .resipesItem__image {
        width: 100%; } }
    .resipesItem__image img {
      max-width: 100%;
      height: auto;
      display: block;
      text-align: center;
      margin: 0 auto; }
    .resipesItem__image .author {
      position: absolute;
      top: 80%;
      left: 50%; }
      .resipesItem__image .author__foto img {
        background-color: #2f3032;
        box-sizing: border-box;
        border: 2px solid #2f3032;
        border-radius: 50%; }
      .resipesItem__image .author__name {
        margin-left: 8px;
        -ms-flex-item-align: center;
            -ms-grid-row-align: center;
            align-self: center; }
        .resipesItem__image .author__name p {
          color: #fcfcfc; }
  .resipesItem__dsc {
    width: 50%;
    background-color: #ffffff;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: nowrap;
        flex-wrap: nowrap;
    -ms-flex-direction: column;
        flex-direction: column;
    -ms-flex-pack: justify;
        justify-content: space-between;
    -ms-flex-align: center;
        align-items: center;
    -ms-flex: 1 1 255px;
        flex: 1 1 255px; }
    @media screen and (max-width: 767px) {
      .resipesItem__dsc {
        width: 100%; } }
    .resipesItem__dsc-title {
      width: 90%;
      margin: 18px auto 0 18px; }
      .resipesItem__dsc-title h3.dsc-title {
        color: #3d3d3d;
        font-size: 24px;
        text-align: center; }
    .resipesItem__dsc-info {
      display: -ms-flexbox;
      display: flex;
      -ms-flex-wrap: nowrap;
          flex-wrap: nowrap;
      -ms-flex-pack: justify;
          justify-content: space-between; }
      .resipesItem__dsc-info .btn {
        width: calc(100%/3-5.5px);
        border: 1px solid  #f2f2f2;
        border-radius: 12px;
        color: #b5904e;
        font-size: 14px;
        padding: 6px 10px 6px 28px;
        margin: 3px; }
      .resipesItem__dsc-info .btn1 {
        background: url(../img/clock.png) 10% 50% no-repeat; }
      .resipesItem__dsc-info .btn2 {
        background: url(../img/cooking_hat.png) 10% 50% no-repeat; }
      .resipesItem__dsc-info .btn3 {
        background: url(../img/runnig_men.png) 10% 50% no-repeat; }
    .resipesItem__dsc-text {
      width: 90%;
      margin: 18px auto 0 18px; }
      .resipesItem__dsc-text p {
        color: #5b5b5b; }
    .resipesItem__dsc-footer {
      border-top: 1px solid #f2f2f2;
      box-sizing: border-box;
      display: -ms-flexbox;
      display: flex;
      -ms-flex-wrap: nowrap;
          flex-wrap: nowrap;
      -ms-flex-pack: justify;
          justify-content: space-between; }
      .resipesItem__dsc-footer .socIc {
        width: calc(100%/2-5.5px); }
        .resipesItem__dsc-footer .socIc a {
          font-size: 14px;
          color: #737373;
          text-decoration: none;
          padding: 5px;
          box-sizing: border-box; }
          .resipesItem__dsc-footer .socIc a:hover {
            color: #efefef; }

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/